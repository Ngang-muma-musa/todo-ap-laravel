name: CI Workflow

on:
  pull_request:

jobs:
  pr-title-check:
    name: Check PR Title
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js for Commitlint
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Commitlint and Husky
        run: |
          npm install --global @commitlint/cli @commitlint/config-conventional husky

      - name: Run Commitlint
        run: |
          npx commitlint --from=${{ github.event.pull_request.title }}

  linting:
    name: linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1' # Adjust PHP version as needed
          extensions: mbstring, mysql

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist

      - name: Install PHP CodeSniffer
        run: composer global require "squizlabs/php_codesniffer=*"

      - name: Run PHP Code Sniffer
        run: phpcs --standard=PSR12 app/ # Adjust the directory and standard as needed

  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: [linting] # Ensure linting runs before tests
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_database
          MYSQL_USER: user
          MYSQL_PASSWORD: password
        ports:
          - 3306:3306
        # Adjust if needed, depending on your database service's configurations

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1' # Adjust PHP version as needed
          extensions: mbstring, mysql

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist

      - name: Set up .env
        run: |
          cp .env.example .env
          php artisan key:generate
          sed -i 's/DB_CONNECTION=mysql/DB_CONNECTION=mysql/' .env
          sed -i 's/DB_HOST=127.0.0.1/DB_HOST=127.0.0.1/' .env
          sed -i 's/DB_PORT=3306/DB_PORT=3306/' .env
          sed -i 's/DB_DATABASE=laravel/DB_DATABASE=test_database/' .env
          sed -i 's/DB_USERNAME=root/DB_USERNAME=user/' .env
          sed -i 's/DB_PASSWORD=/DB_PASSWORD=password/' .env

      - name: Run database migrations
        run: php artisan migrate --database=mysql

      - name: Run PHPUnit tests
        run: vendor/bin/phpunit --configuration phpunit.xml
